{"version":3,"file":"static/js/380.c765efaa.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/image/src/native-image.tsx","../node_modules/@chakra-ui/image/src/use-image.ts","../node_modules/utilities/object-utils/src/omit.ts","../node_modules/@chakra-ui/image/src/image.tsx","components/Projects.js","../node_modules/@chakra-ui/layout/src/heading.tsx","../node_modules/@chakra-ui/layout/src/link.tsx"],"sourcesContent":["import { PropsOf, forwardRef } from \"@chakra-ui/system\"\n\nexport interface NativeImageOptions {\n  /**\n   * The native HTML `width` attribute to the passed to the `img`\n   */\n  htmlWidth?: string | number\n  /**\n   * The native HTML `height` attribute to the passed to the `img`\n   */\n  htmlHeight?: string | number\n}\n\ninterface NativeImageProps extends PropsOf<\"img\">, NativeImageOptions {}\n\nexport const NativeImage = forwardRef(function NativeImage(\n  props: NativeImageProps,\n  ref: React.Ref<any>,\n) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props\n  return (\n    <img width={htmlWidth} height={htmlHeight} ref={ref} alt={alt} {...rest} />\n  )\n})\n\nNativeImage.displayName = \"NativeImage\"\n","import { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\"\nimport { useCallback, useEffect, useRef, useState } from \"react\"\n\ntype NativeImageProps = React.ImgHTMLAttributes<HTMLImageElement>\n\nexport interface UseImageProps {\n  /**\n   * The image `src` attribute\n   */\n  src?: string\n  /**\n   * The image `srcset` attribute\n   */\n  srcSet?: string\n  /**\n   * The image `sizes` attribute\n   */\n  sizes?: string\n  /**\n   * A callback for when the image `src` has been loaded\n   */\n  onLoad?: NativeImageProps[\"onLoad\"]\n  /**\n   * A callback for when there was an error loading the image `src`\n   */\n  onError?: NativeImageProps[\"onError\"]\n  /**\n   * If `true`, opt out of the `fallbackSrc` logic and use as `img`\n   *\n   * @default false\n   */\n  ignoreFallback?: boolean\n  /**\n   * The key used to set the crossOrigin on the HTMLImageElement into which the image will be loaded.\n   * This tells the browser to request cross-origin access when trying to download the image data.\n   */\n  crossOrigin?: NativeImageProps[\"crossOrigin\"]\n  loading?: NativeImageProps[\"loading\"]\n}\n\ntype Status = \"loading\" | \"failed\" | \"pending\" | \"loaded\"\n\nexport type FallbackStrategy = \"onError\" | \"beforeLoadOrError\"\n\ntype ImageEvent = React.SyntheticEvent<HTMLImageElement, Event>\n\n/**\n * React hook that loads an image in the browser,\n * and lets us know the `status` so we can show image\n * fallback if it is still `pending`\n *\n * @returns the status of the image loading progress\n *\n * @example\n *\n * ```jsx\n * function App(){\n *   const status = useImage({ src: \"image.png\" })\n *   return status === \"loaded\" ? <img src=\"image.png\" /> : <Placeholder />\n * }\n * ```\n */\nexport function useImage(props: UseImageProps) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback,\n  } = props\n\n  const [status, setStatus] = useState<Status>(\"pending\")\n\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\")\n  }, [src])\n\n  const imageRef = useRef<HTMLImageElement | null>()\n\n  const load = useCallback(() => {\n    if (!src) return\n\n    flush()\n\n    const img = new Image()\n    img.src = src\n    if (crossOrigin) img.crossOrigin = crossOrigin\n    if (srcSet) img.srcset = srcSet\n    if (sizes) img.sizes = sizes\n    if (loading) img.loading = loading\n\n    img.onload = (event) => {\n      flush()\n      setStatus(\"loaded\")\n      onLoad?.(event as unknown as ImageEvent)\n    }\n    img.onerror = (error) => {\n      flush()\n      setStatus(\"failed\")\n      onError?.(error as any)\n    }\n\n    imageRef.current = img\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading])\n\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null\n      imageRef.current.onerror = null\n      imageRef.current = null\n    }\n  }\n\n  useSafeLayoutEffect(() => {\n    /**\n     * If user opts out of the fallback/placeholder\n     * logic, let's bail out.\n     */\n    if (ignoreFallback) return undefined\n\n    if (status === \"loading\") {\n      load()\n    }\n    return () => {\n      flush()\n    }\n  }, [status, load, ignoreFallback])\n\n  /**\n   * If user opts out of the fallback/placeholder\n   * logic, let's just return 'loaded'\n   */\n  return ignoreFallback ? \"loaded\" : status\n}\n\nexport const shouldShowFallbackImage = (\n  status: Status,\n  fallbackStrategy: FallbackStrategy,\n) =>\n  (status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\") ||\n  (status === \"failed\" && fallbackStrategy === \"onError\")\n\nexport type UseImageReturn = ReturnType<typeof useImage>\n","export function omit<T extends Record<string, any>, K extends keyof T>(\n  object: T,\n  keysToOmit: K[] = [],\n) {\n  const clone: Record<string, unknown> = Object.assign({}, object)\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key as string]\n    }\n  }\n  return clone as Omit<T, K>\n}\n","import {\n  chakra,\n  SystemProps,\n  forwardRef,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { omit } from \"@chakra-ui/object-utils\"\nimport {\n  FallbackStrategy,\n  shouldShowFallbackImage,\n  useImage,\n  UseImageProps,\n} from \"./use-image\"\nimport { NativeImage, NativeImageOptions } from \"./native-image\"\n\ninterface ImageOptions extends NativeImageOptions {\n  /**\n   * Fallback image `src` to show if image is loading or image fails.\n   *\n   * Note 🚨: We recommend you use a local image\n   */\n  fallbackSrc?: string\n  /**\n   * Fallback element to show if image is loading or image fails.\n   * @type React.ReactElement\n   */\n  fallback?: React.ReactElement\n  /**\n   * Defines loading strategy\n   */\n  loading?: \"eager\" | \"lazy\"\n  /**\n   * How the image to fit within its bounds.\n   * It maps to css `object-fit` property.\n   * @type SystemProps[\"objectFit\"]\n   */\n  fit?: SystemProps[\"objectFit\"]\n  /**\n   * How to align the image within its bounds.\n   * It maps to css `object-position` property.\n   * @type SystemProps[\"objectPosition\"]\n   */\n  align?: SystemProps[\"objectPosition\"]\n  /**\n   * If `true`, opt out of the `fallbackSrc` logic and use as `img`\n   *\n   * @default false\n   */\n  ignoreFallback?: boolean\n\n  /**\n   * - beforeLoadOrError(default): loads the fallbackImage while loading the src\n   * - onError: loads the fallbackImage only if there is an error fetching the src\n   *\n   * @default \"beforeLoadOrError\"\n   * @see Issue https://github.com/chakra-ui/chakra-ui/issues/5581\n   */\n  fallbackStrategy?: FallbackStrategy\n  /**\n   * Defining which referrer is sent when fetching the resource.\n   * @type React.HTMLAttributeReferrerPolicy\n   */\n  referrerPolicy?: React.HTMLAttributeReferrerPolicy\n}\n\nexport interface ImageProps\n  extends UseImageProps,\n    Omit<HTMLChakraProps<\"img\">, keyof UseImageProps>,\n    ImageOptions {}\n\n/**\n * React component that renders an image with support\n * for fallbacks\n *\n * @see Docs https://chakra-ui.com/image\n */\nexport const Image = forwardRef<ImageProps, \"img\">(function Image(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props\n\n  const providedFallback = fallbackSrc !== undefined || fallback !== undefined\n  /**\n   * Defer to native `img` tag if `loading` prop is passed\n   * @see https://github.com/chakra-ui/chakra-ui/issues/1027\n   *\n   * shouldIgnoreFallbackImage determines if we have the possibility to render a fallback image\n   */\n  const shouldIgnoreFallbackImage =\n    loading != null ||\n    // use can opt out of fallback image\n    ignoreFallback ||\n    // if the user doesn't provide any kind of fallback we should ignore it\n    !providedFallback\n\n  /**\n   * returns `loaded` if fallback is ignored\n   */\n  const status = useImage({\n    ...props,\n    crossOrigin,\n    ignoreFallback: shouldIgnoreFallbackImage,\n  })\n\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy)\n\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...(shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])),\n  }\n\n  if (showFallbackImage) {\n    /**\n     * If user passed a custom fallback component,\n     * let's render it here.\n     */\n    if (fallback) return fallback\n\n    return (\n      <chakra.img\n        as={NativeImage}\n        className=\"chakra-image__placeholder\"\n        src={fallbackSrc}\n        {...shared}\n      />\n    )\n  }\n\n  return (\n    <chakra.img\n      as={NativeImage}\n      src={src}\n      srcSet={srcSet}\n      crossOrigin={crossOrigin}\n      loading={loading}\n      referrerPolicy={referrerPolicy}\n      className=\"chakra-image\"\n      {...shared}\n    />\n  )\n})\n\nImage.displayName = \"Image\"\n","import React from 'react';\r\nimport { Box, Flex, Image, Link, Heading, Icon, Text } from '@chakra-ui/react';\r\nimport projectImage1 from '../../src/ekabasket.png';\r\nimport { FaSearch } from 'react-icons/fa';\r\n\r\nconst Projects = () => {\r\n    return (\r\n        <Box py={10} px={4} id='projects'>\r\n            <Heading fontSize=\"25px\" textAlign=\"center\" color={'blue.900'}>\r\n                <Box\r\n                    as=\"span\"\r\n                    borderBottom=\"2px dotted\"\r\n                    pb=\"0px\"\r\n                    _hover={{ borderBottomColor: \"gray\" }}\r\n                    borderColor={'gray'}\r\n                >\r\n                    Projects\r\n                </Box>\r\n            </Heading>\r\n\r\n            <Flex justifyContent=\"space-between\" flexWrap=\"wrap\" maxW=\"960px\" mx=\"auto\" mt={8} gap={1}>\r\n                <Link\r\n                    href='https://ekabasket.com/'\r\n                    target=\"_blank\"\r\n                    boxShadow={'md'}\r\n                    width={['100%', 'calc(100%)', 'calc(33.33% - 5px)']}\r\n                    borderWidth=\"1px\"\r\n                    borderColor=\"gray.300\"\r\n                    _hover={{ boxShadow: 'md', bg: 'gray.100' }}\r\n                    textDecoration=\"none\"\r\n                    // minHeight={'250px'}\r\n                    mt={2}\r\n                    p={5}\r\n                    bg={'gray.50'}\r\n                    role='group'\r\n                    position={'relative'}\r\n                >\r\n                    <Image src={projectImage1} height={'200px'} width={'100%'} alt=\"Project 1 Image\" objectFit={'cover'} />\r\n                    <Box pt={2} >\r\n                        <Text fontDecoration={'underline'} fontWeight={'medium'} lineHeight={'24px'} color={'blue.800'} fontSize={'md'}>\r\n                            Ecommerce Website Using PHP, Laravel Framework\r\n                        </Text>\r\n                    </Box>\r\n                    <Icon\r\n                        _groupHover={{ visibility: 'visible' }}\r\n                        position=\"absolute\"\r\n                        bottom=\"50%\"\r\n                        left=\"50%\"\r\n                        transform=\"translate(-50%, 50%)\"\r\n                        visibility=\"hidden\"\r\n                        border={'1px solid'}\r\n                        borderRadius={'sm'}\r\n                        color='blue.900'\r\n                        bg={'gray.200'}\r\n                        height={'35px'}\r\n                        w={'55px'}\r\n                        p={2}\r\n                        fontSize={'xl'}\r\n                        as={FaSearch}\r\n                    />\r\n                </Link>\r\n                <Link\r\n                    href='https://github.com/prakritibhattrai/Food-Ordering-Application-using-React'\r\n                    target=\"_blank\"\r\n                    boxShadow={'md'}\r\n                    width={['100%', 'calc(100%)', 'calc(33.33% - 5px)']}\r\n                    borderWidth=\"1px\"\r\n                    borderColor=\"gray.300\"\r\n                    _hover={{ boxShadow: 'md', bg: 'gray.100' }}\r\n                    textDecoration=\"none\"\r\n\r\n                    mt={2}\r\n                    p={5}\r\n                    bg={'gray.50'}\r\n                    position={'relative'}\r\n                    role='group'\r\n\r\n                >\r\n                    <Image src='https://socialsocial.social/btabcloud/uploads/2022/06/food-delivery-software-1654237411lp84c-700x560.jpg' objectFit={'cover'}\r\n                        height={'200px'} width={'100%'} alt=\"Project 1 Image\" />\r\n                    <Box pt={2} >\r\n                        <Text fontDecoration={'underline'} fontWeight={'medium'} lineHeight={'24px'} color={'blue.800'} fontSize={'md'}>\r\n                            Food Ordering Application Using React and Tailwind CSS\r\n                        </Text>\r\n                    </Box>\r\n                    <Icon\r\n                        _groupHover={{ visibility: 'visible' }}\r\n                        position=\"absolute\"\r\n                        bottom=\"50%\"\r\n                        left=\"50%\"\r\n                        transform=\"translate(-50%, 50%)\"\r\n                        visibility=\"hidden\"\r\n                        border={'1px solid'}\r\n                        borderRadius={'sm'}\r\n                        color='blue.900'\r\n                        bg={'gray.200'}\r\n                        height={'35px'}\r\n                        w={'55px'}\r\n                        p={2}\r\n                        fontSize={'xl'}\r\n                        as={FaSearch}\r\n                    />\r\n                </Link>\r\n                <Link\r\n                    href='https://github.com/prakritibhattrai/mern-ecommerce-application'\r\n                    target=\"_blank\"\r\n                    boxShadow={'md'}\r\n                    width={['100%', 'calc(100%)', 'calc(33.33% - 5px)']}\r\n                    borderWidth=\"1px\"\r\n                    borderColor=\"gray.300\"\r\n                    _hover={{ boxShadow: 'md', bg: 'gray.100' }}\r\n                    textDecoration=\"none\"\r\n\r\n                    mt={2}\r\n                    p={5}\r\n                    bg={'gray.50'}\r\n                    position={'relative'}\r\n                    role='group'\r\n                >\r\n                    <Image src='https://5.imimg.com/data5/SELLER/Default/2022/12/UI/MT/TS/107827373/6505894-500x500.jpg'\r\n                        objectFit={'cover'} height={'200px'} width={'100%'} alt=\"Project 1 Image\" />\r\n                    <Box pt={2} >\r\n                        <Text fontDecoration={'underline'} fontWeight={'medium'} lineHeight={'24px'} color={'blue.800'} fontSize={'md'}>\r\n                            Ecommerce Website Using MERN Stack\r\n                        </Text>\r\n                    </Box>\r\n                    <Icon\r\n                        _groupHover={{ visibility: 'visible' }}\r\n                        position=\"absolute\"\r\n                        bottom=\"50%\"\r\n                        left=\"50%\"\r\n                        transform=\"translate(-50%, 50%)\"\r\n                        visibility=\"hidden\"\r\n                        border={'1px solid'}\r\n                        borderRadius={'sm'}\r\n                        color='blue.900'\r\n                        bg={'gray.200'}\r\n                        height={'35px'}\r\n                        w={'55px'}\r\n                        p={2}\r\n                        fontSize={'xl'}\r\n                        as={FaSearch}\r\n                    />\r\n                </Link>\r\n\r\n            </Flex>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Projects;\r\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface LinkProps extends HTMLChakraProps<\"a\">, ThemingProps<\"Link\"> {\n  /**\n   *  If `true`, the link will open in new tab\n   *\n   * @default false\n   */\n  isExternal?: boolean\n}\n\n/**\n * Links are accessible elements used primarily for navigation.\n *\n * It integrates well with other routing libraries like\n * React Router, Reach Router and Next.js Link.\n *\n * @example\n *\n * ```jsx\n * <Link as={ReactRouterLink} to=\"/home\">Home</Link>\n * ```\n *\n * @see Docs https://chakra-ui.com/link\n */\nexport const Link = forwardRef<LinkProps, \"a\">(function Link(props, ref) {\n  const styles = useStyleConfig(\"Link\", props)\n  const { className, isExternal, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.a\n      target={isExternal ? \"_blank\" : undefined}\n      rel={isExternal ? \"noopener\" : undefined}\n      ref={ref}\n      className={cx(\"chakra-link\", className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nLink.displayName = \"Link\"\n"],"names":["NativeImage","forwardRef","props","ref","htmlWidth","htmlHeight","alt","rest","jsx","width","height","displayName","omit","object","keysToOmit","arguments","length","undefined","clone","Object","assign","key","Image","fallbackSrc","fallback","src","srcSet","align","fit","loading","ignoreFallback","crossOrigin","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","status","onLoad","onError","sizes","setStatus","useState","useEffect","imageRef","useRef","load","useCallback","flush","img","srcset","onload","event","onerror","error","current","useSafeLayoutEffect","useImage","showFallbackImage","shouldShowFallbackImage","shared","objectFit","objectPosition","chakra","as","className","Projects","_jsxs","Box","py","px","id","children","_jsx","Heading","fontSize","textAlign","color","borderBottom","pb","_hover","borderBottomColor","borderColor","Flex","justifyContent","flexWrap","maxW","mx","mt","gap","Link","href","target","boxShadow","borderWidth","bg","textDecoration","p","role","position","projectImage1","pt","Text","fontDecoration","fontWeight","lineHeight","Icon","_groupHover","visibility","bottom","left","transform","border","borderRadius","w","FaSearch","styles","useStyleConfig","omitThemingProps","h2","cx","__css","isExternal","a","rel"],"sourceRoot":""}